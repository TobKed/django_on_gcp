steps:
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}", "."]

  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"]

  - id: "apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i",
        "gcr.io/$PROJECT_ID/${_SERVICE_NAME}",
        "-s",
        "${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}",
        "-e",
        "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}",
        "-e",
        "GOOGLE_CLOUD_PROJECT=$PROJECT_ID",
        "--",
        "python",
        "manage.py",
        "migrate",
      ]

  - id: "install requirements"
    name: "python:3.9"
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "--user"]

  - id: "collect static files"
    name: "python:3.9"
    entrypoint: python
    args: ["manage.py", "collectstatic", "--verbosity", "2", "--noinput"]
    env:
      - "GOOGLE_CLOUD_PROJECT=$PROJECT_ID"

  - id: "deploy app"
    name: "gcr.io/cloud-builders/gcloud"
    args: ["app", "deploy", "${_GAE_FILE}", "--quiet"]

  - id: "get app url"
    name: "gcr.io/cloud-builders/gcloud"
    args: ["app",  "describe", "--format", "value(defaultHostname)"]

substitutions:
  _GAE_FILE: gae_app_standard.yaml
  _INSTANCE_NAME: db-instance
  _REGION: us-central1
  _SERVICE_NAME: polls-service
  _SECRET_SETTINGS_NAME: django_settings

images:
  - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"
